<apex:component controller="MultiRecordComponentController" allowDML="true">
  <script type="text/javascript"> 
    function openLookup(baseURL, width, modified, searchParam){
    var originalbaseURL = baseURL;
    var originalwidth = width;
    var originalmodified = modified;
    var originalsearchParam = searchParam;
    
    var lookupType = baseURL.substr(baseURL.length-3, 3);
    if (modified == '1') baseURL = baseURL + searchParam;
    
    var isCustomLookup = false;    
    
    if(lookupType == "{!$ObjectType.Application3__c}" || lookupType == "{!$ObjectType.Region__c}"){
  
      var urlArr = baseURL.split("&");
      var txtId = '';
      if(urlArr.length > 2) {
        urlArr = urlArr[1].split('=');
        txtId = urlArr[1];
      }
      
      // Following is the url of Custom Lookup page. You need to change that accordingly
      baseURL = "/apex/CustomLookup?txt=" + txtId;
      
      // Following is the id of apex:form control "myForm". You need to change that accordingly
      baseURL = baseURL + "&frm=" + escapeUTF("{!$Component.myForm}");
      var parentId = "{!ParentRecId}" 
      
      //window.alert(parentId);   
      if (modified == '1') {
        baseURL = baseURL + "&lksearch=" + searchParam + "&parentId=" + parentId;
      }
      
      // Following is the ID of inputField that is the lookup to be customized as custom lookup
      //window.alert(txtId);
       if(txtId.indexOf('Aj_id') > -1 ){ 
        isCustomLookup = true;
      } 
    }
    
    
    if(isCustomLookup == true){
      openPopup(baseURL, "lookup", 350, 480, "width="+width+",height=480,toolbar=no,status=no,directories=no,menubar=no,resizable=yes,scrollable=yes", true);
    }
    else {
      if (modified == '1') originalbaseURL = originalbaseURL + originalsearchParam;
      openPopup(originalbaseURL, "lookup", 350, 480, "width="+originalwidth+",height=480,toolbar=no,status=no,directories=no,menubar=no,resizable=yes,scrollable=yes", true);
    } 
  }
  </script>
  
   <style>
.cmdLink {
   font-size: 89%;
   text-decoration: none;
   float: left;
}
 
.cmdLink:hover {
   text-decoration: underline;
}
.dateFormat
{
 display: left;
}

</style>
   <apex:attribute name="aParentRecId" description="Parent Record Id" type="String" required="true" assignTo="{!ParentRecId}" />
   <apex:attribute name="aRelationField" description="Field that will be assigned the Parent's Record Id" type="String" required="true"
      assignTo="{!RelationField}" />
   <apex:attribute name="asObjectType" description="Type of child Object." type="String" required="true" assignTo="{!sObjectType}" />
   <apex:attribute name="aFieldList" description="List of fields to display." type="string[]" required="true" assignTo="{!FieldList}" />
   <apex:attribute name="aAllowAdd" description="Ability to add new records." type="Boolean" required="false" assignTo="{!AllowAdd}" />
   <apex:attribute name="aAllowEdit" description="Ability to edit records" type="Boolean" required="false" assignTo="{!AllowEdit}" />
   <apex:attribute name="aAllowDelete" description="Ability to delete records" type="Boolean" required="false" assignTo="{!AllowDelete}" />
   <apex:attribute name="aLabelOverrideFieldList" description="List of fields with overridden labels" type="String[]" required="false"
      assignTo="{!LabelOverrideFieldList}" />
   <apex:attribute name="aLabelOverrideTextList" description="List of text that overrides the field labels" type="String[]" required="false"
      assignTo="{!LabelOverrideTextList}" />
   <apex:attribute name="aDefaultValueFieldList" description="List of fields used to set default values on added records" type="String[]"
      required="false" assignTo="{!DefaultValueFieldList}" />
   <apex:attribute name="aDefaultValueTextList" description="List of text used to set default values on added records" type="String[]"
      required="false" assignTo="{!DefaultValueTextList}" />
   <apex:attribute name="aBlockTitle" description="Page block title text" type="String" required="false" />

 

 <apex:actionFunction name="DoDeleteJS" action="{!DoDelete}" rerender="pbContainer,msgs" immediate="true">
      <apex:param name="ActionId" assignto="{!ActionId}" value="" />
   </apex:actionFunction>
   <apex:actionFunction name="DoRemoveJS" action="{!DoRemove}" rerender="pbContainer,msgs" immediate="true">
      <apex:param name="ActionRowNumber" assignto="{!ActionRowNumber}" value="" />
   </apex:actionFunction>
 
   <apex:pageMessages id="msgs" />
 
   <apex:pageBlock id="pbContainer" title="{!aBlockTitle}">
 
 
      <apex:pageBlockButtons location="top">
 
         <apex:actionStatus id="ButtonStatus">
            <apex:facet name="stop">
               <apex:outputPanel >
                  <apex:commandButton rerender="pbContainer,msgs" status="ButtonStatus" value="Add" action="{!DoAdd}" immediate="true"
                     rendered="{!AllowAdd}" />
                  <apex:commandButton rerender="pbContainer,msgs" status="ButtonStatus" value="Save" action="{!DoSave}"
                     rendered="{!OR(AllowEdit,AllowAdd)}" disabled="{!DisableSave}" />
                  <apex:commandButton rerender="pbContainer,msgs" status="ButtonStatus" value="Cancel" action="{!DoCancel}" immediate="true"
                     rendered="{!OR(AllowEdit,AllowAdd)}" disabled="{!DisableCancel}" />
               </apex:outputPanel>
            </apex:facet>
            <apex:facet name="start">
               <apex:outputPanel >
                  <apex:commandButton value="Processing..." disabled="true" rendered="{!AllowAdd}" />
                  <apex:commandButton value="Processing..." disabled="true" rendered="{!OR(AllowEdit,AllowAdd)}" />
                  <apex:commandButton value="Processing..." disabled="true" rendered="{!OR(AllowEdit,AllowAdd)}" />
               </apex:outputPanel>
            </apex:facet>
         </apex:actionStatus>
 
      </apex:pageBlockButtons>
 
      <apex:pageBlockTable id="pbTable" value="{!ObjectList}" var="ow">
         <apex:column headerValue="Action" width="71px" rendered="{!OR(AllowEdit,AllowDelete,AllowAdd)}">
            <apex:outputPanel rendered="{!ISBLANK(ow.obj.Id)}">
               <apex:outputLink style="color: #015BA7;" styleClass="cmdLink" value="javascript:DoRemoveJS('{!JSENCODE(ow.AddedRowNumber)}');">Remove</apex:outputLink>
            </apex:outputPanel>
            <apex:outputPanel rendered="{!!ISBLANK(ow.obj.Id)}">
               <apex:commandLink style="color: #015BA7;" styleClass="cmdLink" value="Edit" action="{!DoEdit}" immediate="true"
                  rendered="{!AllowEdit}" rerender="pbContainer,msgs">
                  <apex:param name="RecId" value="{!ow.obj.Id}" assignTo="{!ActionId}" />
               </apex:commandLink>
               <apex:outputPanel style="display:inline;float: left; margin: 0 2px 0 2px" rendered="{!AND(AllowEdit,AllowDelete)}"> | </apex:outputPanel>
               <apex:outputLink style="color: #015BA7;" styleClass="cmdLink"
                  value="javascript:if (window.confirm('Are you sure?')) DoDeleteJS('{!JSENCODE(ow.obj.Id)}');" rendered="{!AllowDelete}">Del</apex:outputLink>
            </apex:outputPanel>
         </apex:column>
 
         <apex:repeat value="{!ColumnList}" var="cf">
            <apex:column width="100" >
               <apex:facet name="header">
                  <span>{!cf.FieldLabel}</span>
               </apex:facet>
               <apex:outputPanel rendered="{!OR(!ISBLANK(ow.obj['Id']), AND(ISBLANK(ow.obj['Id']),cf.IsObjField))}">
               
                  <apex:outputField value="{!ow.obj[cf.FieldName]}" rendered="{!AND(NOT(AND(ow.IsEditMode,cf.IsEditable)),!cf.IsLookup)}" />
 
                <apex:outputLink target="_top" rendered="{!AND(NOT(AND(ow.IsEditMode,cf.IsEditable)),cf.IsLookup)}" value="/{!ow.obj[cf.FieldName]}" >          
                    {!ow.obj[cf.FieldLookup]}
                </apex:outputLink> 
                <apex:pageblockSection >              
               <!--   <apex:outputLabel for="test1" value="T *" /> -->
                  
                  <apex:InputField id="test1" value="{!ow.obj[cf.FieldName]}" rendered="{!AND(ow.IsEditMode,cf.IsEditable,NOT(isPanelApplication),cf.fieldname != 'Stage_Sequence__c')}" />   
                  </apex:pageblockSection>                
                 
             <!--   <apex:InputField value="{!ow.obj['NOFA__c']}" rendered="{!AND(isNofaMember,cf.IsLookup,ow.IsEditMode,cf.IsEditable)}" />  -->
                <apex:pageblockSection >
                <apex:InputField value="{!ow.obj['Application__c']}" rendered="{!AND(isPanelApplication,cf.IsLookup,ow.IsEditMode,cf.IsEditable)}" required="true" />  
                </apex:pageblockSection>
               </apex:outputPanel>
           
            </apex:column>
         </apex:repeat>
      </apex:pageBlockTable>
 
   </apex:pageBlock>
</apex:component>